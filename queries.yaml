constraints:
  - |
    CREATE CONSTRAINT person_uuid_unique IF NOT EXISTS
    FOR (p:Person) REQUIRE p.uuid IS UNIQUE
  - |
    CREATE CONSTRAINT company_uuid_unique IF NOT EXISTS
    FOR (c:Company) REQUIRE c.uuid IS UNIQUE
  - |
    CREATE CONSTRAINT person_name_unique IF NOT EXISTS
    FOR (p:Person) REQUIRE p.name IS UNIQUE
  - |
    CREATE CONSTRAINT company_name_unique IF NOT EXISTS
    FOR (c:Company) REQUIRE c.name IS UNIQUE

create_seed : |
    CREATE (a:Person {name:'Iria', age:27, education:'Physics', uuid:randomUUID()})
    CREATE (b:Person {name:'Guillermo', age:26, education:'Industrial Engineering', uuid:randomUUID()})
    CREATE (c:Person {name:'Gabriela', age:26, education:'Physics', uuid:randomUUID()})
    CREATE (d:Person {name:'Paula', age:25, education:'Computer Engineering', uuid:randomUUID()})
    CREATE (e:Person {name:'Cristina', age:27, education:'Physics', uuid:randomUUID()})
    CREATE (indra:Company {name:'Indra', industry:'Engineering', uuid:randomUUID()})
    CREATE (ciemat:Company {name:'CIEMAT', industry:'Scientific Research', uuid:randomUUID()})
    CREATE (cbm:Company {name:'CBM', industry:'Scientific Research', uuid:randomUUID()})
    CREATE (a)-[:KNOWS {knows_from:'work'}]->(b)
    CREATE (a)-[:KNOWS {knows_from:'university'}]->(c)
    CREATE (a)-[:KNOWS {knows_from:'work'}]->(d)
    CREATE (a)-[:KNOWS {knows_from:'university'}]->(e)
    CREATE (b)-[:KNOWS {knows_from:'work'}]->(d)
    CREATE (c)-[:KNOWS {knows_from:'university'}]->(e)
    CREATE (a)-[:WORKS_AT {since:2025}]->(indra)
    CREATE (b)-[:WORKS_AT {since:2023}]->(indra)
    CREATE (c)-[:WORKS_AT {since:2023}]->(ciemat)
    CREATE (d)-[:WORKS_AT {since:2024}]->(indra)
    CREATE (e)-[:WORKS_AT {since:2025}]->(cbm)
    
match_person : |
    MATCH (p:Person) 
    RETURN p.name as name, p.age as age, p.education as education
    ORDER BY age

match_company : |
    MATCH (c:Company) 
    RETURN c.name as company_name, c.industry as industry
    ORDER BY industry

match_adjacency : |
    MATCH (a:Person)-[:KNOWS]-(b:Person), (a)-[:WORKS_AT]->(c:Company)
    RETURN a.name AS person, collect(b.name) AS knows, c.name AS works_at
    ORDER BY person


add_descriptions :

    - |
        MATCH (p:Person {name:"Iria"})
        SET p.person_info = p.name + " is " + toString(p.age) + " years old and studied " + p.education + "." + "Iria has blue eyes and long brunette and wavy hair. She likes to paint her nails in red or purple colours. She usually wears long earrings."
    - |
        MATCH (p:Person {name:"Guillermo"})
        SET p.person_info = p.name + " is " + toString(p.age) + " years old and studied " + p.education + "." + "Guillermo has brown eyes and short hair. He has a very fancy shirt that he takes to all important events. He shaved his head this summer."
    - |
        MATCH (p:Person {name:"Gabriela"})
        SET p.person_info = p.name + " is " + toString(p.age) + " years old and studied " + p.education + "." + "Gabriela has long curly hair with babylights. She's petite and likes to wear hippie-style clothes."
    - |
        MATCH (p:Person {name:"Paula"})
        SET p.person_info = p.name + " is " + toString(p.age) + " years old and studied " + p.education + "." + "Paula short hair in a wolfcut style. She wears long and wide pants and sneakers to the laboratory."
    - |
        MATCH (p:Person {name:"Cristina"})
        SET p.person_info = p.name + " is " + toString(p.age) + " years old and studied " + p.education + "." + "Cristina has brown eyes and very long straight brunette hair. She usually wears scarfs to style her hair and long skirts. "
    
    - |
        MATCH (c:Company {name:"Indra"})
        SET c.company_info = c.name + " operates in the " + c.industry + " industry." + "Indra Group is a holding company that promotes technological progress. It includes Indra, one of the main global defense, air traffic and space companies; and Minsait, leading digital transformation and information technologies in Spain and Latin America. "
    - |
        MATCH (c:Company {name:"CIEMAT"})
        SET c.company_info = c.name + " operates in the " + c.industry + " industry." + "The CIEMAT (Centro de Investigaciones Energéticas, Medioambientales y Tecnológicas) is a public research organization attached to the Ministry of Science, Innovation and Universities through the General Secretariat for Research. It occupies an intermediate position in the chain that runs from the creation of basic knowledge to industrial application, so its activities always seek to serve as a bridge between R&D&I and objectives of social interest."
    - |
        MATCH (c:Company {name:"CBM"})
        SET c.company_info = c.name + " operates in the " + c.industry + " industry." + "The CBM is a joint research centre, hosting researchers belonging to the Spanish Higher Research Council (CSIC) and the Universidad Autónoma de Madrid (UAM). Founded in 1975, the CBM is one of the largest Spanish multidisciplinary research centres in biomedicine, with expertise in molecular biology, biochemistry, genetics and genomics in several research areas: immunology, virology and microbiology, neuroscience, and cell and developmental biology."


create_vector_indexes:
    - |
        CREATE VECTOR INDEX person_info_idx IF NOT EXISTS
        FOR (n:Person) ON (n.person_info_emb)
        OPTIONS { indexConfig: { `vector.dimensions`: 768, `vector.similarity_function`: 'cosine' } }
    - |
        CREATE VECTOR INDEX company_info_idx IF NOT EXISTS
        FOR (n:Company) ON (n.company_info_emb)
        OPTIONS { indexConfig: { `vector.dimensions`: 768, `vector.similarity_function`: 'cosine' } }

delete_all : 

    - |
        MATCH (n) DETACH DELETE n
    - |
        DROP INDEX person_info_idx IF EXISTS
    - |
        DROP INDEX company_info_idx IF EXISTS